<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.danidemi.tutorial</groupId>
	<artifactId>tutorial-webapp-tomcat-docker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.3-1102-jdbc4</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-dbcp2</artifactId>
		    <version>2.0.1</version>
		</dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
        	<groupId>com.danidemi.jlubricant</groupId>
        	<artifactId>jlubricant-utils</artifactId>
        	<version>0.0.15-SNAPSHOT</version>
        </dependency>
	</dependencies>

	<build>
	
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>env/${my.environment}/</directory>
			</resource>
		</resources>
	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>

		<profile>
			<id>dev</id>
			<!-- This profile is active by default. It means that Eclipse will use 
				that, and will include files from env/development in the classpath (see this 
				profile's resource section). When you want to build the project for a specific 
				environment, through a given profile, remember to provide -Dspecific to disable 
				development. So for instance... mvn assembly:single -Popenshift -Dspecific 
				...will disable this profile during build. -->
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>!specific</name>
				</property>
			</activation>
			<properties>
				<my.environment>dev</my.environment>
			</properties>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<include>**/*</include>
						</includes>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>env/${my.environment}</directory>
						<includes>
							<include>**/*</include>
						</includes>
						<filtering>true</filtering>
					</resource>
				</resources>
			</build>
		</profile>

		<profile>
			<id>dockerized</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<my.environment>dockerized</my.environment>
			</properties>
		</profile>

	</profiles>


</project>